version: '3.6'

services:
  backend:
    build: ./backend
    restart: always
    command: bash -c "wait-for-it db:5432 -- python manage.py migrate && gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - db
    networks:
      - ingress-routing
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  frontend:
    restart: always
    build: ./frontend
    networks:
      - ingress-routing
    ports:
      - "3000:3000"

  bot:
    build: ./backend
    command: ["python", "picheni/bot.py"]
    volumes:
      - ./backend:/app
    networks:
      - ingress-routing
    depends_on:
      - backend

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: picheni
      POSTGRES_USER: admin@picheni
      POSTGRES_PASSWORD: dc3u8747yf9430sf999___004
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    networks:
      - ingress-routing
  nginx:
    image: nginx:latest
    container_name: nginx_aix
    volumes:
      - .:/app
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
#  openresty:
 #   build: .
  #  ports:
   #   - '80:80'
    #  - '443:443'
 #   restart: always
  #  volumes:
   #   - .:/app
    #  - /data/nginx/conf.d:/etc/nginx/conf.d
     # - /data/nginx/sites-enabled:/etc/nginx/sites-enabled
 #     - /data/nginx/resty-auto-ssl:/etc/resty-auto-ssl
  #    - /data/nginx/geoip:/etc/nginx/geoip
#    healthcheck:
#      test: curl -f http://localhost/health || exit 1
#      interval: 5s
#      timeout: 10s
 #     retries: 3
    networks:
      - ingress-routing

configs:
  nginx_cfg:
    file: /data/nginx/nginx.conf
  mime.types:
    file: /data/nginx/mime.types

networks:
  ingress-routing:
volumes:
  postgres_data:
  static_volume: